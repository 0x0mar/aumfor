# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import re
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('platform', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='DLL',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('pid', models.IntegerField(null=True)),
                ('base', models.CharField(max_length=100, null=True)),
                ('size', models.CharField(max_length=100, null=True)),
                ('load_count', models.CharField(max_length=100, null=True)),
                ('path', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dump',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('profile', models.CharField(max_length=100)),
                ('suggested_profiles', models.CharField(max_length=100, null=True)),
                ('as_layer1', models.TextField(null=True)),
                ('as_layer2', models.TextField(null=True)),
                ('pae_type', models.CharField(max_length=100, null=True)),
                ('dtb', models.CharField(max_length=100, null=True)),
                ('kdbg', models.CharField(max_length=100, null=True)),
                ('number_of_processors', models.IntegerField(null=True)),
                ('service_pack', models.IntegerField(null=True)),
                ('kuser_shared_data', models.CharField(max_length=100, null=True)),
                ('image_date_and_time', models.DateTimeField(null=True)),
                ('image_local_date_and_time', models.DateTimeField(null=True)),
                ('start_time', models.CharField(max_length=100, null=True)),
                ('end_time', models.CharField(max_length=100, null=True)),
                ('upload', models.OneToOneField(related_name='dump', to='platform.Upload')),
            ],
        ),
        migrations.CreateModel(
            name='Handle',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('offset_v', models.CharField(max_length=100, null=True)),
                ('pid', models.IntegerField(null=True)),
                ('handle', models.CharField(max_length=100, null=True)),
                ('access', models.CharField(max_length=100, null=True)),
                ('type', models.CharField(max_length=100, null=True)),
                ('details', models.TextField(null=True)),
                ('dump', models.ForeignKey(related_name='handles', to='platform_windows.Dump')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkConnection',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('offset_v', models.CharField(max_length=100, null=True)),
                ('pid', models.IntegerField(null=True)),
                ('port', models.IntegerField(null=True)),
                ('proto', models.IntegerField(null=True)),
                ('protocol', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=15)),
                ('create_time', models.DateTimeField()),
                ('dump', models.ForeignKey(related_name='networkconnections', to='platform_windows.Dump')),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('pid', models.IntegerField()),
                ('name', models.CharField(max_length=30, null=True)),
                ('ppid', models.IntegerField()),
                ('thread_count', models.IntegerField(null=True)),
                ('handle_count', models.IntegerField(null=True)),
                ('session', models.IntegerField(null=True)),
                ('wow64', models.NullBooleanField()),
                ('creation_time', models.DateTimeField(null=True)),
                ('termination_time', models.DateTimeField(null=True)),
                ('offset_v', models.CharField(max_length=100, null=True)),
                ('offset_p', models.CharField(max_length=100, null=True)),
                ('pdb', models.CharField(max_length=100, null=True)),
                ('dump', models.ForeignKey(to='platform_windows.Dump')),
            ],
        ),
        migrations.CreateModel(
            name='RegistryHive',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('virtual', models.CharField(max_length=100)),
                ('physical', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=256)),
                ('dump', models.ForeignKey(related_name='registry_hives', to='platform_windows.Dump')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('location', models.CharField(max_length=100, null=True)),
                ('report_type', models.CharField(max_length=50, null=True)),
                ('date', models.DateTimeField(null=True)),
                ('processes', models.TextField(validators=[django.core.validators.RegexValidator(re.compile('^[\\d,]+\\Z'), 'Enter only digits separated by commas.', 'invalid')])),
            ],
        ),
        migrations.CreateModel(
            name='ScanInformation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('scan_id', models.CharField(max_length=500, null=True)),
                ('scan_date', models.DateTimeField(null=True)),
                ('response_code', models.IntegerField(null=True)),
                ('resource', models.CharField(max_length=500, null=True)),
                ('verbose_msg', models.CharField(max_length=500, null=True)),
                ('md5', models.CharField(max_length=32, null=True)),
                ('sha1', models.CharField(max_length=40, null=True)),
                ('sha256', models.CharField(max_length=64, null=True)),
                ('permalink', models.CharField(max_length=500, null=True)),
                ('positives', models.IntegerField(null=True)),
                ('total', models.IntegerField(null=True)),
                ('process', models.OneToOneField(related_name='scan_info', to='platform_windows.Process')),
            ],
        ),
        migrations.CreateModel(
            name='ScanResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('anti_virus_name', models.CharField(max_length=100, null=True)),
                ('detected', models.NullBooleanField()),
                ('version', models.CharField(max_length=50, null=True)),
                ('result', models.CharField(max_length=200, null=True)),
                ('update', models.CharField(max_length=20, null=True)),
                ('scan_information', models.ForeignKey(related_name='scan_results', to='platform_windows.ScanInformation')),
            ],
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('pid', models.IntegerField(null=True)),
                ('tid', models.IntegerField(null=True)),
                ('offset', models.CharField(max_length=100, null=True)),
                ('tags', models.CharField(max_length=100, null=True)),
                ('create_time', models.CharField(max_length=100, null=True)),
                ('exit_time', models.CharField(max_length=100, null=True)),
                ('owning_process', models.CharField(max_length=100, null=True)),
                ('attached_process', models.CharField(max_length=100, null=True)),
                ('state', models.CharField(max_length=100, null=True)),
                ('state_reason', models.CharField(max_length=100, null=True)),
                ('base_priority', models.CharField(max_length=100, null=True)),
                ('priority', models.CharField(max_length=100, null=True)),
                ('teb', models.CharField(max_length=100, null=True)),
                ('start_address', models.CharField(max_length=100, null=True)),
                ('owner_name', models.CharField(max_length=100, null=True)),
                ('win32_start_address', models.CharField(max_length=100, null=True)),
                ('win32_thread', models.CharField(max_length=100, null=True)),
                ('cross_thread_flags', models.CharField(max_length=100, null=True)),
                ('eip', models.CharField(max_length=100, null=True)),
                ('eax', models.CharField(max_length=100, null=True)),
                ('ebx', models.CharField(max_length=100, null=True)),
                ('ecx', models.CharField(max_length=100, null=True)),
                ('edx', models.CharField(max_length=100, null=True)),
                ('esi', models.CharField(max_length=100, null=True)),
                ('edi', models.CharField(max_length=100, null=True)),
                ('esp', models.CharField(max_length=100, null=True)),
                ('ebp', models.CharField(max_length=100, null=True)),
                ('errcode', models.CharField(max_length=100, null=True)),
                ('segcs', models.CharField(max_length=100, null=True)),
                ('segss', models.CharField(max_length=100, null=True)),
                ('segsd', models.CharField(max_length=100, null=True)),
                ('seges', models.CharField(max_length=100, null=True)),
                ('seggs', models.CharField(max_length=100, null=True)),
                ('segfs', models.CharField(max_length=100, null=True)),
                ('eflags', models.CharField(max_length=100, null=True)),
                ('dr0', models.CharField(max_length=100, null=True)),
                ('dr1', models.CharField(max_length=100, null=True)),
                ('dr2', models.CharField(max_length=100, null=True)),
                ('dr3', models.CharField(max_length=100, null=True)),
                ('dr6', models.CharField(max_length=100, null=True)),
                ('dr7', models.CharField(max_length=100, null=True)),
                ('ssdt', models.CharField(max_length=100, null=True)),
                ('entry_number', models.CharField(max_length=100, null=True)),
                ('descriptor_service_table', models.CharField(max_length=100, null=True)),
                ('hook_number', models.CharField(max_length=100, null=True)),
                ('function_name', models.CharField(max_length=100, null=True)),
                ('function_address', models.CharField(max_length=100, null=True)),
                ('module_name', models.CharField(max_length=100, null=True)),
                ('disassembly', models.TextField(null=True)),
                ('dump', models.ForeignKey(related_name='threads', to='platform_windows.Dump')),
            ],
        ),
        migrations.AddField(
            model_name='dll',
            name='dump',
            field=models.ForeignKey(related_name='dlls', to='platform_windows.Dump'),
        ),
    ]
